name: "CI/CD: Build and Deploy All Services on EC2"

on:
  push:
    branches:
      - main

env:
  IMAGE_TAG: latest

jobs:
  build-and-push:
    name: "🔧 Build and Push to ECR"
    runs-on: ubuntu-latest

    steps:
      - name: "📮 Checkout Code"
        uses: actions/checkout@v3

      - name: "🔐 Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: "🐳 Login to Amazon ECR"
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: "🐳 Build and Push Custom Docker Images"
        run: |
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}

          docker build -f Dockerfile -t $ECR_REGISTRY/app:$IMAGE_TAG .
          docker build -f airflow/Dockerfile -t $ECR_REGISTRY/airflow:$IMAGE_TAG airflow/

          docker push $ECR_REGISTRY/app:$IMAGE_TAG
          docker push $ECR_REGISTRY/airflow:$IMAGE_TAG

  deploy-on-ec2:
    name: "🚀 Deploy on EC2"
    needs: build-and-push
    runs-on: self-hosted

    steps:
      - name: "📮 Checkout Code"
        uses: actions/checkout@v3

      - name: "🔐 Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: "🔁 Login to Amazon ECR"
        uses: aws-actions/amazon-ecr-login@v1

      - name: "📦 Pull ECR Images"
        run: |
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}

          docker pull $ECR_REGISTRY/app:$IMAGE_TAG
          docker pull $ECR_REGISTRY/airflow:$IMAGE_TAG

      - name: "🐳 Run docker-compose on EC2"
        run: |
          docker compose -f docker-compose.deploy.yml up -d --remove-orphans
